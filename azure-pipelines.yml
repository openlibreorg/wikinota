trigger: 
 - master

pool:
   vmImage: 'ubuntu-latest'

steps: 
- task: GoTool@0
  inputs:
    version: '1.13.5'
    goPath: '/go'
    goBin: '/go/bin'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-u github.com/jstemmer/go-junit-report@v0.9.1'
- task: CmdLine@2
  inputs:
    script: 'mkdir /bar; go test  ./... -coverprofile /bar/cover.out -v -bench -count 5 2>&1 | /go/bin/go-junit-report > /report.xml'
- task: CmdLine@2
  inputs:
    script: 'go tool cover -html /bar/cover.out -o /bar/cover.html'
- task: CmdLine@2
  inputs:
    script: 'cat /bar/cover.html'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '/bar/cover.html'
    ArtifactName: 'coverHTML'
    publishLocation: 'Container'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '/report.xml'
    mergeTestResults: true
    failTaskOnFailedTests: true
- task: Go@0
  inputs:
    command: 'build'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: CopyFiles@2
  inputs:
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
     artifactName: drop
- task: Go@0
  inputs:
    command: 'get'
    arguments: 'github.com/axw/gocov/...'
- task: Go@0
  inputs:
    command: 'get'
    arguments: 'github.com/AlekSi/gocov-xml'
- task: CmdLine@2
  inputs:
    script: '/go/bin/gocov test ./... | /go/bin/gocov-xml -source $(System.DefaultWorkingDirectory) > /coverage.xml'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '/coverage.xml'